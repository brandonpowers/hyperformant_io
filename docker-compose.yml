services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: hyperformant-postgres
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: hyperformant-dev
      POSTGRES_DB: hyperformant
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  # n8n Workflow Automation
  n8n:
    image: n8nio/n8n:1.107.4
    container_name: hyperformant-n8n
    ports:
      - '5678:5678'
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=admin
      - N8N_ENCRYPTION_KEY=hyperformant-n8n-encryption-key
      - N8N_RUNNERS_ENABLED=true
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=false
      - N8N_PUBLIC_API_DISABLED=false
      - N8N_DISABLE_UI=false
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n_db
      - DB_POSTGRESDB_USER=postgres
      - DB_POSTGRESDB_PASSWORD=hyperformant-dev
      - DB_POSTGRESDB_SCHEMA=n8n
      - EXECUTIONS_DATA_SAVE_ON_ERROR=all
      - EXECUTIONS_DATA_SAVE_ON_SUCCESS=all
      - EXECUTIONS_DATA_SAVE_ON_PROGRESS=true
      - EXECUTIONS_DATA_SAVE_MANUAL_EXECUTIONS=true
      # Hyperformant business database access
      - HYPERFORMANT_DB_HOST=postgres
      - HYPERFORMANT_DB_PORT=5432
      - HYPERFORMANT_DB_NAME=hyperformant
      - HYPERFORMANT_DB_USER=postgres
      - HYPERFORMANT_DB_PASSWORD=hyperformant-dev
    volumes:
      - n8n-data:/home/node/.n8n
      - ./n8n/workflows:/home/node/workflows
    depends_on:
      postgres:
        condition: service_healthy

  # Infisical Secret Management
  infisical:
    image: infisical/infisical:latest
    container_name: hyperformant-infisical
    ports:
      - '8080:8080'
    environment:
      # Database Configuration
      DB_CONNECTION_URI: postgresql://postgres:hyperformant-dev@postgres:5432/infisical_db
      REDIS_URL: redis://redis:6379
      
      # Infisical Configuration (32-character keys for AES-256)
      ENCRYPTION_KEY: hyperformantdevkey32characters12
      AUTH_SECRET: hyperformantdevauth32characters1
      JWT_SIGNUP_SECRET: hyperformantjwtsignup32character
      JWT_REFRESH_SECRET: hyperformantjwtrefresh32charact
      JWT_AUTH_SECRET: hyperformantjwtauth32characters1
      JWT_MFA_SECRET: hyperformantjwtmfa32characters12
      JWT_PROVIDER_AUTH_SECRET: hyperformantjwtprovider32charact
      
      # Site Configuration
      SITE_URL: http://localhost:8080
      NEXT_PUBLIC_INFISICAL_PLATFORM_VERSION: latest
      
      # Features
      SMTP_HOST: inbucket
      SMTP_PORT: 2500
      SMTP_SECURE: false
      SMTP_FROM_ADDRESS: noreply@hyperformant.io
      SMTP_FROM_NAME: Hyperformant
      
      # Development Settings
      NODE_ENV: development
      POSTHOG_PROJECT_API_KEY: ''
      INFISICAL_PLATFORM_VERSION: latest
    volumes:
      - infisical-data:/app/data
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ['CMD-SHELL', 'wget --no-verbose --tries=1 --spider http://localhost:8080/api/status || exit 1']
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for Infisical
  redis:
    image: redis:7-alpine
    container_name: hyperformant-redis
    ports:
      - '6379:6379'
    volumes:
      - redis-data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  # Email Testing (Development Only)
  inbucket:
    image: inbucket/inbucket:stable
    container_name: hyperformant-inbucket
    ports:
      - '9000:9000' # Web UI
      - '2500:2500' # SMTP
      - '1100:1100' # POP3

volumes:
  postgres-data:
  n8n-data:
  infisical-data:
  redis-data:
